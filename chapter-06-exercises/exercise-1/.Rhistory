print(days_to_break)
#
birthdays <- list(
my_birthday = as.Date("2000-05-21"),
mom_birthday = as.Date("1965-08-16"),
dad_birthday = as.Date("1961-09-15"),
sister_birthday = as.Date("1991-09-21")
)
#
parent_bday <- format(birthdays$mom_birthday, "%m/%d")
#
birthdays_2019 <- lapply(birthdays, format, "2019/%m/%d")
print(birthdays_2019)
# A function that checks if the Date value entered has passed
# Returns TRUE if date has passed, FALSE if not
DateHasPassed <- function(Date) {
todays_date <- Sys.Date()
if (Date - todays_date < 0) {
TRUE
}
else {
FALSE
}
}
# Tests if the DateHasPassed() function works
assignment_date <- as.Date("2019/01/23")
print(DateHasPassed(assignment_date))
#
MakeBirthdayAnnouncement <- function(name, Date) {
num_of_days_til_bday <-
if (DateHasPassed(Date) == TRUE) {
num_of_days_til_bday <- (Date - today) + 365
}
else {
num_of_days_til_bday <- Date - today
}
announcement <- paste(name, "'s birthday is in", num_of_days_til_bday, "days")
}
print(announcement)
spring_break <- as.Date("2019-03-19")
#
today <- Sys.Date()
print(today)
#
days_to_break <- spring_break - today
print(days_to_break)
#
birthdays <- list(
my_birthday = as.Date("2000-05-21"),
mom_birthday = as.Date("1965-08-16"),
dad_birthday = as.Date("1961-09-15"),
sister_birthday = as.Date("1991-09-21")
)
#
parent_bday <- format(birthdays$mom_birthday, "%m/%d")
#
birthdays_2019 <- lapply(birthdays, format, "2019/%m/%d")
print(birthdays_2019)
# A function that checks if the Date value entered has passed
# Returns TRUE if date has passed, FALSE if not
DateHasPassed <- function(Date) {
todays_date <- Sys.Date()
if (Date - todays_date < 0) {
TRUE
}
else {
FALSE
}
}
# Tests if the DateHasPassed() function works
assignment_date <- as.Date("2019/01/23")
print(DateHasPassed(assignment_date))
#
MakeBirthdayAnnouncement <- function(name, Date) {
num_of_days_til_bday <-
announcement <- ""
if (DateHasPassed(Date) == TRUE) {
num_of_days_til_bday <- (Date - today) + 365
}
else {
num_of_days_til_bday <- Date - today
}
announcement <- paste(name, "'s birthday is in", num_of_days_til_bday, "days")
}
print(announcement)
spring_break <- as.Date("2019-03-19")
#
today <- Sys.Date()
print(today)
#
days_to_break <- spring_break - today
print(days_to_break)
#
birthdays <- list(
my_birthday = as.Date("2000-05-21"),
mom_birthday = as.Date("1965-08-16"),
dad_birthday = as.Date("1961-09-15"),
sister_birthday = as.Date("1991-09-21")
)
#
parent_bday <- format(birthdays$mom_birthday, "%m/%d")
#
birthdays_2019 <- lapply(birthdays, format, "2019/%m/%d")
print(birthdays_2019)
# A function that checks if the Date value entered has passed
# Returns TRUE if date has passed, FALSE if not
DateHasPassed <- function(Date) {
todays_date <- Sys.Date()
if (Date - todays_date < 0) {
TRUE
}
else {
FALSE
}
}
# Tests if the DateHasPassed() function works
assignment_date <- as.Date("2019/01/23")
print(DateHasPassed(assignment_date))
#
MakeBirthdayAnnouncement <- function(name, Date) {
num_of_days_til_bday <-
announcement <- ""
if (DateHasPassed(Date) == TRUE) {
num_of_days_til_bday <- (Date - today) + 365
}
else {
num_of_days_til_bday <- Date - today
}
announcement <- paste(name, "'s birthday is in", num_of_days_til_bday, "days")
print(announcement)
}
spring_break <- as.Date("2019-03-19")
#
today <- Sys.Date()
print(today)
#
days_to_break <- spring_break - today
print(days_to_break)
#
birthdays <- list(
my_birthday = as.Date("2000-05-21"),
mom_birthday = as.Date("1965-08-16"),
dad_birthday = as.Date("1961-09-15"),
sister_birthday = as.Date("1991-09-21")
)
#
parent_bday <- format(birthdays$mom_birthday, "%m/%d")
#
birthdays_2019 <- lapply(birthdays, format, "2019/%m/%d")
print(birthdays_2019)
# A function that checks if the Date value entered has passed
# Returns TRUE if date has passed, FALSE if not
DateHasPassed <- function(Date) {
todays_date <- Sys.Date()
if (Date - todays_date < 0) {
TRUE
}
else {
FALSE
}
}
# Tests if the DateHasPassed() function works
assignment_date <- as.Date("2019/01/23")
print(DateHasPassed(assignment_date))
#
MakeBirthdayAnnouncement <- function(name, Date) {
num_of_days_til_bday <-
announcement <- ""
if (DateHasPassed(Date) == TRUE) {
num_of_days_til_bday <- (Date - today) + 365
}
else {
num_of_days_til_bday <- Date - today
}
announcement <- paste(name, "'s birthday is in", num_of_days_til_bday, "days")
}
print(MakeBirthdayAnnouncement("Cheryl", assignment_date))
spring_break <- as.Date("2019-03-19")
#
today <- Sys.Date()
print(today)
#
days_to_break <- spring_break - today
print(days_to_break)
#
birthdays <- list(
my_birthday = as.Date("2000-05-21"),
mom_birthday = as.Date("1965-08-16"),
dad_birthday = as.Date("1961-09-15"),
sister_birthday = as.Date("1991-09-21")
)
#
parent_bday <- format(birthdays$mom_birthday, "%m/%d")
#
birthdays_2019 <- lapply(birthdays, format, "2019/%m/%d")
print(birthdays_2019)
# A function that checks if the Date value entered has passed
# Returns TRUE if date has passed, FALSE if not
DateHasPassed <- function(Date) {
todays_date <- Sys.Date()
if (Date - todays_date < 0) {
TRUE
}
else {
FALSE
}
}
# Tests if the DateHasPassed() function works
assignment_date <- as.Date("2019/01/23")
print(DateHasPassed(assignment_date))
#
MakeBirthdayAnnouncement <- function(name, Date) {
num_of_days_til_bday <-
announcement <- ""
if (DateHasPassed(Date) == TRUE) {
num_of_days_til_bday <- (Date - today) + 365
}
else {
num_of_days_til_bday <- Date - today
}
announcement <- paste(name, "'s birthday is in", num_of_days_til_bday, "days", sep = "")
}
print(MakeBirthdayAnnouncement("Cheryl", assignment_date))
spring_break <- as.Date("2019-03-19")
#
today <- Sys.Date()
print(today)
#
days_to_break <- spring_break - today
print(days_to_break)
#
birthdays <- list(
my_birthday = as.Date("2000-05-21"),
mom_birthday = as.Date("1965-08-16"),
dad_birthday = as.Date("1961-09-15"),
sister_birthday = as.Date("1991-09-21")
)
#
parent_bday <- format(birthdays$mom_birthday, "%m/%d")
#
birthdays_2019 <- lapply(birthdays, format, "2019/%m/%d")
print(birthdays_2019)
# A function that checks if the Date value entered has passed
# Returns TRUE if date has passed, FALSE if not
DateHasPassed <- function(Date) {
todays_date <- Sys.Date()
if (Date - todays_date < 0) {
TRUE
}
else {
FALSE
}
}
# Tests if the DateHasPassed() function works
assignment_date <- as.Date("2019/01/23")
print(DateHasPassed(assignment_date))
#
MakeBirthdayAnnouncement <- function(name, Date) {
num_of_days_til_bday <-
announcement <- ""
if (DateHasPassed(Date) == TRUE) {
num_of_days_til_bday <- (Date - today) + 365
}
else {
num_of_days_til_bday <- Date - today
}
announcement <- paste(name, "'s birthday is in ", num_of_days_til_bday, " days", sep = "")
}
print(MakeBirthdayAnnouncement("Cheryl", assignment_date
spring_break <- as.Date("2019-03-19")
#
today <- Sys.Date()
print(today)
#
days_to_break <- spring_break - today
print(days_to_break)
#
birthdays <- list(
my_birthday = as.Date("2000-05-21"),
mom_birthday = as.Date("1965-08-16"),
dad_birthday = as.Date("1961-09-15"),
sister_birthday = as.Date("1991-09-21")
)
#
parent_bday <- format(birthdays$mom_birthday, "%m/%d")
#
birthdays_2019 <- lapply(birthdays, format, "2019/%m/%d")
print(birthdays_2019)
# A function that checks if the Date value entered has passed
# Returns TRUE if date has passed, FALSE if not
DateHasPassed <- function(Date) {
todays_date <- Sys.Date()
if (Date - todays_date < 0) {
TRUE
}
else {
FALSE
}
}
# Tests if the DateHasPassed() function works
assignment_date <- as.Date("2019/01/23")
print(DateHasPassed(assignment_date))
#
MakeBirthdayAnnouncement <- function(name, Date) {
num_of_days_til_bday <-
announcement <- ""
if (DateHasPassed(Date) == TRUE) {
num_of_days_til_bday <- (Date - today) + 365
}
else {
num_of_days_til_bday <- Date - today
}
announcement <- paste(name, "'s birthday is in ", num_of_days_til_bday, " days", sep = "")
}
print(MakeBirthdayAnnouncement("Cheryl", assignment_date))
spring_break <- as.Date("2019-03-19")
#
today <- Sys.Date()
print(today)
#
days_to_break <- spring_break - today
print(days_to_break)
#
birthdays <- list(
my_birthday = as.Date("2000-05-21"),
mom_birthday = as.Date("1965-08-16"),
dad_birthday = as.Date("1961-09-15"),
sister_birthday = as.Date("1991-09-21")
)
#
parent_bday <- format(birthdays$mom_birthday, "%m/%d")
#
birthdays_2019 <- lapply(birthdays, format, "2019/%m/%d")
print(birthdays_2019)
# A function that checks if the Date value entered has passed
# Returns TRUE if date has passed, FALSE if not
DateHasPassed <- function(Date) {
todays_date <- Sys.Date()
if (Date - todays_date < 0) {
TRUE
}
else {
FALSE
}
}
# Tests if the DateHasPassed() function works
assignment_date <- as.Date("2019/01/23")
print(DateHasPassed(assignment_date))
#
MakeBirthdayAnnouncement <- function(name, Date) {
num_of_days_til_bday <-
announcement <- ""
if (DateHasPassed(Date) == TRUE) {
num_of_days_til_bday <- (Date - today) + 365
}
else {
num_of_days_til_bday <- Date - today
}
announcement <- paste(name, "'s birthday is in ", num_of_days_til_bday, " days", sep = "")
}
print(MakeBirthdayAnnouncement("Cheryl", birthdays$my_birthday))
# which is March 16, 2019
spring_break <- as.Date("2019-03-19")
#
today <- Sys.Date()
print(today)
#
days_to_break <- spring_break - today
print(days_to_break)
#
birthdays <- list(
my_birthday = as.Date("2000-05-21"),
mom_birthday = as.Date("1965-08-16"),
dad_birthday = as.Date("1961-09-15"),
sister_birthday = as.Date("1991-09-21")
)
#
parent_bday <- format(birthdays$mom_birthday, "%m/%d")
#
birthdays_2019 <- lapply(birthdays, format, "2019/%m/%d")
print(birthdays_2019)
# A function that checks if the Date value entered has passed
# Returns TRUE if date has passed, FALSE if not
DateHasPassed <- function(Date) {
todays_date <- Sys.Date()
if (Date - todays_date < 0) {
TRUE
}
else {
FALSE
}
}
# Tests if the DateHasPassed() function works
assignment_date <- as.Date("2019/01/23")
print(DateHasPassed(assignment_date))
#
MakeBirthdayAnnouncement <- function(name, Date) {
num_of_days_til_bday <-
announcement <- ""
if (DateHasPassed(Date) == TRUE) {
num_of_days_til_bday <- (Date - today) + 365
}
else {
num_of_days_til_bday <- Date - today
}
announcement <- paste(name, "'s birthday is in ", num_of_days_til_bday, " days", sep = "")
}
# To test if the MakeBirthdayAnnouncement() works
# print(MakeBirthdayAnnouncement("Cheryl", assignment_date))
#
bday_announcements <- mapply(birthdays_2019, MakeBirthdayAnnouncement)
print(bday_announcements)
spring_break <- as.Date("2019-03-19")
#
today <- Sys.Date()
print(today)
#
days_to_break <- spring_break - today
print(days_to_break)
#
birthdays <- list(
my_birthday = as.Date("2000-05-21"),
mom_birthday = as.Date("1965-08-16"),
dad_birthday = as.Date("1961-09-15"),
sister_birthday = as.Date("1991-09-21")
)
#
parent_bday <- format(birthdays$mom_birthday, "%m/%d")
#
birthdays_2019 <- lapply(birthdays, format, "2019/%m/%d")
print(birthdays_2019)
# A function that checks if the Date value entered has passed
# Returns TRUE if date has passed, FALSE if not
DateHasPassed <- function(Date) {
todays_date <- Sys.Date()
if (Date - todays_date < 0) {
TRUE
}
else {
FALSE
}
}
# Tests if the DateHasPassed() function works
assignment_date <- as.Date("2019/01/23")
print(DateHasPassed(assignment_date))
#
MakeBirthdayAnnouncement <- function(name, Date) {
num_of_days_til_bday <-
announcement <- ""
if (DateHasPassed(Date) == TRUE) {
num_of_days_til_bday <- (Date - today) + 365
}
else {
num_of_days_til_bday <- Date - today
}
announcement <- paste(name, "'s birthday is in ", num_of_days_til_bday, " days", sep = "")
}
# To test if the MakeBirthdayAnnouncement() works
# print(MakeBirthdayAnnouncement("Cheryl", assignment_date))
#
bday_announcements <- mapply(MakeBirthdayAnnouncement, birthdays_2019)
print(bday_announcements)
spring_break <- as.Date("2019-03-19")
#
today <- Sys.Date()
print(today)
#
days_to_break <- spring_break - today
print(days_to_break)
#
birthdays <- list(
my_birthday = as.Date("2000-05-21"),
mom_birthday = as.Date("1965-08-16"),
dad_birthday = as.Date("1961-09-15"),
sister_birthday = as.Date("1991-09-21")
)
#
parent_bday <- format(birthdays$mom_birthday, "%m/%d")
#
birthdays_2019 <- lapply(birthdays, format, "2019/%m/%d")
print(birthdays_2019)
# A function that checks if the Date value entered has passed
# Returns TRUE if date has passed, FALSE if not
DateHasPassed <- function(Date) {
todays_date <- Sys.Date()
if (Date - todays_date < 0) {
TRUE
}
else {
FALSE
}
}
# Tests if the DateHasPassed() function works
assignment_date <- as.Date("2019/01/23")
print(DateHasPassed(assignment_date))
#
MakeBirthdayAnnouncement <- function(name, Date) {
num_of_days_til_bday <-
announcement <- ""
if (DateHasPassed(Date) == TRUE) {
num_of_days_til_bday <- (Date - today) + 365
}
else {
num_of_days_til_bday <- Date - today
}
announcement <- paste(name, "'s birthday is in ", num_of_days_til_bday, " days", sep = "")
}
# To test if the MakeBirthdayAnnouncement() works
# print(MakeBirthdayAnnouncement("Cheryl", assignment_date))
#
bday_announcements <- lapply(birthdays_2019, MakeBirthdayAnnouncement)
print(bday_announcements)
